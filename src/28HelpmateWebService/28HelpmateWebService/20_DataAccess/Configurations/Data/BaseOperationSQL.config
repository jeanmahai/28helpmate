<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://www.w3.org/DataOperation"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!--*******************************************查询1个用户针对1个拍卖商品的最后一次拍卖记录*******************************-->
  <!--User Login-->
  <dataCommand name="Login" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
SELECT 
	ID
FROM 
	LoanDB.dbo.S_Auth_User 
WHERE 
	UserName=@UserName
	AND Password=@Password
  AND UserType = @UserType
      ]]>
    </commandText>
  </dataCommand>
  <!--是否存在用户username-->
  <dataCommand name="HasUser" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
SELECT 
	COUNT(ID) 
FROM 
	LoanDB.dbo.S_Auth_User 
WHERE 
	UserName=@UserName AND UserType = @UserType
      ]]>
    </commandText>
  </dataCommand>
  <!--User register-->
  <dataCommand name="Register" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
INSERT INTO [LoanDB].[dbo].[S_Auth_User]
           ([UserName]
           ,[Email]
           ,[Password]
           ,[RecommandPerson]
           ,[IsVIP]
           ,[Status]
           ,[CreateBy]
           ,[EditDate]
           ,[EditBy])
     VALUES
           (@UserName
           ,@Email
           ,@Password
           ,@RecommandPerson
           ,@IsVIP
           ,@Status
           ,@CreateBy
           ,@EditDate
           ,@EditBy)
      ]]>
    </commandText>
  </dataCommand>
  <!--User change/save password-->
  <dataCommand name="SavePassword" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
use LoanDB

IF((SELECT COUNT(ID) FROM dbo.S_Auth_User WHERE Password=@oPassword)>0)
BEGIN 
	UPDATE dbo.S_Auth_User
	SET Password=@Password
	WHERE UserName=@UserName
END
ELSE
BEGIN
	SELECT -1  
END
      ]]>
    </commandText>
  </dataCommand>
  <dataCommand name="SavePassword2" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
use LoanDB

IF((SELECT COUNT(ID) FROM dbo.S_Auth_User WHERE Email=@Email and UserName=@UserName)>0)
BEGIN 
	UPDATE dbo.S_Auth_User
	SET Password=@Password
	WHERE UserName=@UserName and UserName=@UserName
END
ELSE
BEGIN
	SELECT -1  
END
      ]]>
    </commandText>
  </dataCommand>
  <!--获取用户所有资料（视图）-->
  <dataCommand name="GetWholeUserInfo" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
  SELECT * FROM LoanDB.dbo.V_UserInfo WHERE UserID = @UserID
      ]]>
    </commandText>
  </dataCommand>
  <!--获取借款列表（分页）-->
  <dataCommand name="GetLoanQueryList" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
      WITH tmp AS
      (
        SELECT ROW_NUMBER() OVER(ORDER BY @OrderBy) AS col,
               bid.ID,
               bid.Title,
               bid.Usage,
               dic.Value UsageName,
               bid.CreateDate,
               bid.Amount,
               bid.Deposit,
               bid.ManageFee,
               bid.Term,
               bid.Rate,
               bid.Reward,
               bid.EffectDays,
               bid.Comment,
               bid.PayMethod,
               bid.Status,
               us.UserID,
               us.NickName,
               us.UserName,
               us.ProvinceID,
               us.CityID,
               (
                  SELECT SUM(InvestAmount)
                  FROM  dbo.InvestRecord invest
                  WHERE invest.BidID = bid.ID
               ) AS InvestAmount,
               (select grade from dbo.useraccountinfo where id=us.userid) as UserGrade
        FROM  dbo.BidHead bid
        LEFT JOIN dbo.V_UserInfo us
        ON bid.UserID = us.UserID
        INNER JOIN dbo.DictionaryInfo dic
        ON dic.ID = bid.Usage
        WHERE 1=1 @param
      )

      SELECT * FROM tmp 
      WHERE col > (@PageNum -1) * @PageSize AND col <= @PageNum * @PageSize
      ]]>
    </commandText>
  </dataCommand>
  <!--获取用户账户统计信息-->
  <dataCommand name="GetUserAccountStatics" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
      SELECT SUM(TotalAmount) AS TotalAmount,
       SUM(LimitAmount) AS LimitAmount,
       SUM(TotalLoan) AS TotalLoan,
       SUM(Payed) AS Payed,
       SUM(TotalNotPay) AS TotalNotPay,
       SUM(OverReadyToPay) AS OverReadyToPay,
       SUM(OverPayed) AS OverPayed,
       SUM(InvestAmount) AS InvestAmount,
       SUM(ReturnAmount) AS ReturnAmount
  FROM (SELECT TotalAmount, --账户总额
               LimitAmount, --用户额度
               0           AS TotalLoan,
               0           AS Payed,
               0           AS TotalNotPay,
               0           AS OverReadyToPay,
               0           AS OverPayed,
               0           AS InvestAmount,
               0           AS ReturnAmount
          FROM dbo.UserAccountInfo
         WHERE UserID = @UserID and Status = 1
        UNION ALL
        SELECT 0 AS TotalAmount,
               0 AS LimitAmount,
               SUM(Amount) AS TotalLoan, --贷款总额
               0 AS Payed,
               0 AS TotalNotPay,
               0 AS OverReadyToPay,
               0 AS OverPayed,
               0 AS InvestAmount,
               0 AS ReturnAmount
          FROM dbo.BidHead
         GROUP BY Status, UserID
        having status in (2,3,4) AND UserID = @UserID
        UNION ALL
        SELECT 0 AS TotalAmount,
               0 AS LimitAmount,
               0 AS TotalLoan,
               CASE
                 WHEN B.Status = 2 THEN
                  SUM(B.RefundAmount)
                 ELSE
                  0
               END AS Payed, --已还总额
               CASE
                 WHEN B.Status in (1,3) THEN
                  SUM(B.Principal + B.RefundAccrual + B.OverDayAccrual + B.LateFee + B.ForceFee)
                 ELSE
                  0
               END AS TotalNotPay, --待还总额(还款必须一次性还清，所以这里不需要减去已还金额)
               CASE
                 WHEN B.Status = 3 THEN
                  SUM(B.Principal + B.RefundAccrual + B.OverDayAccrual + B.LateFee + B.ForceFee)
                 ELSE
                  0
               END AS OverReadyToPay, --逾期待还
               CASE
                 WHEN B.Status = 4 THEN
                  SUM(B.RefundAmount)
                 ELSE
                  0 --逾期已还
               END AS OverPayed,
               0 AS InvestAmount,
               0 AS ReturnAmount
          FROM dbo.BidDetail B
         INNER JOIN dbo.BidHead A
            ON A.ID = B.ID
         GROUP BY B.Status, A.UserID
        HAVING A.UserID = @UserID
        UNION ALL
        SELECT 0 AS TotalAmount,
               0 AS LimitAmount,
               0 AS TotalLoan,
               0 AS Payed,
               0 AS TotalNotPay,
               0 AS OverReadyToPay,
               0 AS OverPayed,
               SUM(InvestAmount) AS InvestAmount,
               SUM(ReturnAmount) AS ReturnAmount
          FROM dbo.InvestRecord
         GROUP BY status, UserID
        having status <> 4 AND UserID = @UserID --投资总额
        ) A

      ]]>
    </commandText>
  </dataCommand>
  <!--获取贷款数据用于统计用户还款信息-->
  <dataCommand name="GetUserPaybackData" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
      SELECT 	head.UserID,head.Status HeadStatus,head.ID BidID,detail.[index],detail.StartDate,detail.EndDate,detail.Status DetailStatus,detail.ReturnDate
      FROM dbo.BidHead head
      INNER JOIN dbo.BidDetail detail
      ON head.ID = detail.BidID
      WHERE head.UserID = @UserID
      ]]>
    </commandText>
  </dataCommand>
  <!--获取平均收益率-->
  <dataCommand name="GetInvestARR" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
      declare @accrual decimal(18,6),@invest decimal(18,6)

      SELECT @accrual = sum(amount) FROM dbo.InvestReturnAccrual where status = 2
      SELECT @invest = SUM(InvestAmount) FROM dbo.InvestRecord where status = 3

      select @accrual / @invest
      ]]>
    </commandText>
  </dataCommand>

  <!--获取资金信息（统计）-->
  <dataCommand name="GetUserAmountStatics" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
      SELECT SUM(TotalAmount) AS TotalAmount,
  SUM(AvailableAmount) AS AvailableAmount,
  SUM(FreezeAmount) AS FreezeAmount,
  SUM(Deposit) AS Deposit,
  SUM(InAmount) AS InAmount,
  SUM(OutAmount) AS OutAmount
  FROM (SELECT TotalAmount, --账户总额
  CASE WHEN Status = 1 THEN TotalAmount ELSE 0 END AvailableAmount, --可用余额
  CASE WHEN Status = 0 THEN TotalAmount ELSE 0 END FreezeAmount,--冻结金额
  0 AS Deposit,
  0 AS InAmount,
  0 AS OutAmount
  FROM dbo.UserAccountInfo
  WHERE UserID = @UserID
  UNION ALL
  SELECT 0 AS TotalAmount,
  0 AS AvailableAmount,
  0 AS FreezeAmount,
  SUM(Deposit) Deposit, --保证金
  0 AS InAmount,
  0 AS OutAmount
  FROM dbo.BidHead
  where status = 4 AND DepositStatus = 0 AND UserID = @UserID
  --GROUP BY Status, UserID,DepositStatus
  --having status = 4 AND DepositStatus = 0 AND UserID = @UserID
  UNION ALL
  SELECT 0 AS TotalAmount,
  0 AS AvailableAmount,
  0 AS TotalLoan,
  0 AS Deposit,
  CASE WHEN TradeType = 1 THEN SUM(TradeAmount) ELSE 0 END InAmount, --充值金额
  CASE WHEN TradeType = 2 THEN SUM(TradeAmount) ELSE 0 END OutAmount --提现金额
  FROM dbo.UserAccountTradeInfo
  GROUP BY Status, UserID,TradeType
  HAVING UserID = @UserID AND Status = 2
  ) A
      ]]>
    </commandText>
  </dataCommand>
  <dataCommand name="GetInvestRecordByUserID" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
        select	a.ID,
				        a.UserID,
				        b.UserName,
				        a.BidID,
				        a.InvestAmount,
				        a.ReturnAmount,
				        a.ReturnDate,
				        a.ReturnMethod,
				        a.Status,
				        a.UserConfirmStatus,
				        a.CreateDate,
				        a.CreateBy,
				        a.EditDate,
				        a.EditBy,
				        a.ApproveBy,
				        a.ApproveRemark,
				        a.ApproveDate,
                a.Reward
				from dbo.InvestRecord a
				inner join dbo.S_Auth_User b
				on a.UserID = b.ID
				where a.UserID = @UserID
   ]]>
    </commandText>
    <parameters>

    </parameters>
  </dataCommand>
  <dataCommand name="GetInvestRecordByID" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
        select	a.ID,
				        a.UserID,
				        b.UserName,
				        a.BidID,
				        a.InvestAmount,
				        a.ReturnAmount,
				        a.ReturnDate,
                a.Reward,
				        a.ReturnMethod,
				        a.Status,
				        a.UserConfirmStatus,
				        a.CreateDate,
				        a.CreateBy,
				        a.EditDate,
				        a.EditBy,
				        a.ApproveBy,
				        a.ApproveRemark,
				        a.ApproveDate
				from dbo.InvestRecord a
				inner join dbo.S_Auth_User b
				on a.UserID = b.ID
				where a.ID = @ID
   ]]>
    </commandText>
    <parameters>

    </parameters>
  </dataCommand>
  <!--获取还款计划-->
  <dataCommand name="GetLoanReturnPlanList" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT @TotalCount = COUNT(1)
      FROM   dbo.BidHead head
      INNER JOIN
            dbo.BidDetail detail
      ON    head.ID = detail.BidID
      WHERE detail.Status in (1,3) AND ISNULL(detail.ReturnTradeNo,0) = 0 AND head.status = 4 @param;
      
      WITH tmp AS
      (
          SELECT  ROW_NUMBER() OVER(ORDER BY @OrderBy) AS col, 
                  head.ID BidID,
                  head.Title,
                  detail.StartDate,
                  detail.ID BidDetailID,
                  detail.EndDate,
                  detail.Principal,
                  detail.Principal + detail.RefundAccrual + detail.OverDayAccrual PrincipalAndAccrual,
                  detail.RefundAccrual + detail.OverDayAccrual TotalAccrual,
                  detail.LateFee,
                  detail.RewardFee,
                  detail.Status
           FROM   dbo.BidHead head
           INNER JOIN
                  dbo.BidDetail detail
           ON     head.ID = detail.BidID
           WHERE  detail.Status in (1,3) AND ISNULL(detail.ReturnTradeNo,0) = 0 AND head.status = 4 @param
       )
       SELECT * FROM tmp 
       WHERE col > (@PageNum -1) * @PageSize AND col <= @PageNum * @PageSize
       order by EndDate desc
   ]]>
    </commandText>
    <parameters>
      <param name="@TotalCount" dbType="Int32" direction="Output"/>
    </parameters>
  </dataCommand>
  
  <!--退还投资者利息-->
  <dataCommand name="ReturnInvestAccrual" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[
      IF EXISTS (SELECT TOP 1 1 FROM dbo.InvestReturnAccrual WHERE BidID = @BidID AND BidDetailID = @BidDetailID)
      BEGIN
        DECLARE @TradeNo INT --交易编号
        DECLARE @UserID  INT --投资者ID
        DECLARE @ReturnFee decimal(18,6) --交易费用
        DECLARE @PrincipalFee decimal(18,6) --本金
        DECLARE @AccrualFee decimal(18,6) --利息
        DECLARE @ManageFee decimal(18,6) --管理费
        DECLARE @InvestID INT 
        
        DECLARE cur Cursor FOR
        SELECT InvestID FROM dbo.InvestReturnAccrual
        WHERE BidID = @BidID AND BidDetailID = @BidDetailID
        OPEN cur
        FETCH NEXT FROM cur INTO @InvestID
        WHILE @@fetch_status = 0
        BEGIN
        
          BEGIN TRANSACTION UP
          SELECT @UserID = B.UserID,
                  @ReturnFee = ISNULL(A.Amount,0) + ISNULL(A.Principal,0) - ISNULL(A.ManageFee,0),
                  @PrincipalFee =  ISNULL(A.Principal,0),
                  @AccrualFee = ISNULL(A.Amount,0),
                  @ManageFee =  ISNULL(A.ManageFee,0)
          FROM  dbo.InvestReturnAccrual A
          INNER JOIN dbo.InvestRecord B
          ON A.InvestID = B.ID
          WHERE A.BidID = @BidID AND A.BidDetailID = @BidDetailID AND A.InvestID = @InvestID
        
          IF (@UserID IS NOT NULL)
          BEGIN
            --插入交易记录
            INSERT INTO dbo.UserAccountTradeInfo
            (UserID,TradeType,TradeWay,HandlingCharge,TradeAmount,Description,Status,CreateBy)
            SELECT @UserID,6,1,@ManageFee,@ReturnFee,'退还投资',2,'system'
            FROM  dbo.InvestReturnAccrual
            WHERE BidID = @BidID AND BidDetailID = @BidDetailID AND InvestID = @InvestID
        
            SET @TradeNo=SCOPE_IDENTITY()
          
            IF (@TradeNo IS NOT NULL AND @TradeNo > 0)
            BEGIN
            --更新状态
              UPDATE dbo.InvestReturnAccrual
              SET Status = 1,--已付息
                  UserConfirmStatus = 2,--已到帐
                  TradeNo = @TradeNo,
                  EditDate = getdate()
                WHERE BidID = @BidID AND BidDetailID = @BidDetailID  AND InvestID = @InvestID  
        
              --更新已还金额
              UPDATE dbo.InvestRecord
              SET   ReturnAmount = ReturnAmount + @ReturnFee,EditDate = Getdate()
              WHERE ID = @InvestID
        
              --更新账户金额
              UPDATE dbo.UserAccountInfo
              SET TotalAmount = TotalAmount + @ReturnFee,EditDate = Getdate()
              WHERE UserID = @UserID
            
              --插入消息记录
              INSERT INTO dbo.UserMessage (ReceiveUserName,Title,Content,Status,CreateBy)
              SELECT suser.UserName,'投资收益入账','您的投资收益已入账：本金【￥'+ replace(STR(@PrincipalFee,18,2),' ','') +'】,投资利息【￥'+ replace(STR(@AccrualFee,18,2),' ','') +'】，除去利息管理费用【￥'+ replace(STR(@ManageFee,18,2),' ','') +'】，请到【我的账户】查看。',1,'system'
              FROM dbo.S_Auth_User suser
              WHERE suser.ID = @UserID
            
              --如果贷款已还完，则更新投资状态为已还款
              IF EXISTS (SELECT TOP 1 1 FROM dbo.BidHead WHERE RefundStatus = 2 AND ID = @BidID)
              BEGIN
                --更新投资状态为投资结束已还款
                UPDATE dbo.InvestRecord
                SET  Status = 3,
                     UserConfirmStatus = 2--已到帐
                WHERE ID = @InvestID
              END
            END
          END
        
          IF (@@Error <> 0)
	            BEGIN
		            ROLLBACK TRANSACTION checkandup
	            END
	            ELSE
		            COMMIT TRANSACTION checkandup
              
          FETCH NEXT FROM cur INTO @InvestID
        END
        CLOSE cur
        Deallocate cur
      END
      ELSE
        SET @IsExist = -1
   ]]>
    </commandText>
    <parameters>
      <param name="@IsExist" dbType="Int32" direction="Output"/>
    </parameters>
  </dataCommand>

  <!--退还投资者本金-->
  <dataCommand name="ReturnUserInvest" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[
      IF EXISTS (SELECT TOP 1 1 FROM dbo.InvestRecord WHERE BidID = @bidID)
      BEGIN
        --更新投资状态为失败
        UPDATE dbo.InvestRecord
        SET Status = 4
		    WHERE BidID = @bidID
            
        --更新投资者账户金额
        UPDATE A
        SET A.TotalAmount = A.TotalAmount + B.InvestAmount
        FROM dbo.UserAccountInfo A
        INNER JOIN dbo.InvestRecord B
        ON A.UserID = B.UserID
        WHERE B.BidID = @bidID
        
        --插入交易记录
        INSERT INTO dbo.UserAccountTradeInfo
        (UserID,TradeType,TradeWay,HandlingCharge,TradeAmount,Description,Status,CreateBy)
        SELECT A.UserID,6,1,0,B.InvestAmount,'流标退款',2,'system'
        FROM dbo.UserAccountInfo A
        INNER JOIN dbo.InvestRecord B
        ON A.UserID = B.UserID
        WHERE B.BidID = @bidID
        
        --插入消息通知投资者
        INSERT INTO dbo.UserMessage (ReceiveUserName,Title,Content,Status,CreateBy)
        SELECT D.UserName,'流标退款','您所投的标【' + C.Title +'】已流标，投资金额【￥'+ replace(STR(B.InvestAmount,18,2),' ','')+'】已经退还到您的账户，请到【我的账户】查看。',1,'system'
        FROM dbo.InvestRecord B
        INNER JOIN dbo.BidHead C
        ON B.BidID = C.ID
        INNER JOIN dbo.S_AUTH_User D
        ON B.UserID = D.ID
        WHERE B.BidID = @bidID
      END
      ELSE
        SET @IsExist = -1
   ]]>
    </commandText>
    <parameters>
      <param name="@IsExist" dbType="Int32" direction="Output"/>
    </parameters>
  </dataCommand>

  <!--判断当前充值单号是否存在-->
  <dataCommand name="IsUserChargeNoExist" database="Loan" commandType="Text">
    <commandText>
      <![CDATA[      
        SELECT count(1)
        FROM dbo.UserAccountTradeInfo
        WHERE TradeNo = @TradeNo AND Status <> 3 AND TradeType = 1
      ]]>
    </commandText>
  </dataCommand>
</dataOperations>